0 info it worked if it ends with ok
1 verbose cli [ '/Users/azmihafizha/.nvm/versions/node/v7.3.0/bin/node',
1 verbose cli   '/Users/azmihafizha/.nvm/versions/node/v7.3.0/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@3.10.10
3 info using node@v7.3.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/azmihafizha/_tvlk/react-dibs',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/azmihafizha/.npm/react-dibs/0.5.0/package.tgz not in flight; packing
9 verbose correctMkdir /Users/azmihafizha/.npm correctMkdir not in flight; initializing
10 info lifecycle react-dibs@0.5.0~prepublish: react-dibs@0.5.0
11 silly lifecycle react-dibs@0.5.0~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/azmihafizha/.npm/react-dibs/0.5.0/package.tgz',
12 verbose tar pack   '/Users/azmihafizha/_tvlk/react-dibs' ]
13 verbose tarball /Users/azmihafizha/.npm/react-dibs/0.5.0/package.tgz
14 verbose folder /Users/azmihafizha/_tvlk/react-dibs
15 verbose addLocalTarball adding from inside cache /Users/azmihafizha/.npm/react-dibs/0.5.0/package.tgz
16 verbose correctMkdir /Users/azmihafizha/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd react-dibs@0.5.0
18 verbose afterAdd /Users/azmihafizha/.npm/react-dibs/0.5.0/package/package.json not in flight; writing
19 verbose correctMkdir /Users/azmihafizha/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/azmihafizha/.npm/react-dibs/0.5.0/package/package.json written
21 silly publish { name: 'react-dibs',
21 silly publish   version: '0.5.0',
21 silly publish   description: 'dibs react client higher order component',
21 silly publish   main: 'lib/index.js',
21 silly publish   scripts:
21 silly publish    { dev: 'concurrently "npm run lib:watch" "npm run docs"',
21 silly publish      lib: 'babel src/lib -d lib --copy-files',
21 silly publish      'lib:watch': 'babel src/lib -w -d lib --copy-files',
21 silly publish      docs: 'webpack-dev-server --mode development',
21 silly publish      'docs:prod': 'webpack --mode production' },
21 silly publish   keywords: [],
21 silly publish   license: 'MIT',
21 silly publish   peerDependencies:
21 silly publish    { react: '^15.3.0 || ^16.2.0',
21 silly publish      'react-dom': '^15.3.0 || ^16.2.0' },
21 silly publish   devDependencies:
21 silly publish    { '@babel/cli': '^7.0.0-beta.46',
21 silly publish      '@babel/core': '^7.0.0-beta.46',
21 silly publish      '@babel/plugin-proposal-class-properties': '^7.0.0-beta.46',
21 silly publish      '@babel/plugin-proposal-object-rest-spread': '^7.0.0-beta.46',
21 silly publish      '@babel/preset-env': '^7.0.0-beta.46',
21 silly publish      '@babel/preset-react': '^7.0.0-beta.46',
21 silly publish      'babel-loader': '^8.0.0-beta.0',
21 silly publish      concurrently: '^3.5.1',
21 silly publish      'css-loader': '^0.28.11',
21 silly publish      'html-webpack-plugin': '^3.2.0',
21 silly publish      react: '^16.3.2',
21 silly publish      'react-dom': '^16.3.2',
21 silly publish      'style-loader': '^0.21.0',
21 silly publish      webpack: '^4.6.0',
21 silly publish      'webpack-cli': '^2.0.15',
21 silly publish      'webpack-dev-server': '^3.1.3' },
21 silly publish   author: { name: 'Azmi Hafizha', email: 'azmi.hafizha@traveloka.com' },
21 silly publish   homepage: 'https://github.com/zmihaf/react-dibs',
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+ssh://git@github.com/zmihaf/react-dibs.git' },
21 silly publish   dependencies: { 'socket.io-client': '^2.1.0' },
21 silly publish   readme: '# React component boilerplate\n\nThis is a simple boilerplate project for building a react component package for npm. It is suitable for building any type of UI component or library (like for example a dropdown menu or a toggle-switch). The project contains a correctly transpiled folder for the component library (easy to get wrong) as well as a demo page for showcasing it. The demo can easily be uploaded to _GitHub Pages_. This boilerplate project is meant to be minimal and easy to understand. Linting, testing, prettier etc have been purposefully left out. It does not include a UMD build, as those aren\'t really used anymore.\n\nIf you are new to building React components for npm you should check out [this guide](https://medium.com/@markus.s.englund/a-guide-to-building-a-react-component-for-npm-68f03b314753).\n\n## How it is structured\n\nThe source code has two separate parts â€“ the library and the documentation (demo) page. Both are written in ES6 and JSX, and therefore have to be transpiled by Babel but in different ways.\n\n### Component library transpilation\n\nThe library source code, which is located in `src/lib`, is transpiled with Babel but is _not_ bundled with Webpack. Bundling is completely unnecessary, since the developer who will in the end use your library for their application will bundle their entire codebase, which includes your library. More importantly, if your library has any dependencies, bundling them together with your code would be a disaster since it could cause duplication and therefore larger final bundle size. The components still have to be transpiled since many developers have Webpack configured to not transpile their node_modules folder. Some may not be using JSX or ES6 at all, and would therefore be unable to transpile your component.\n\n### Demo app transpilation\n\nThe demo app source code lives inside the `src/docs` folder. It is transpiled, bundled and minified by Webpack and Babel into the `docs` folder in the root directory (by running `npm run docs:prod`). This is a completely normal react app with minimal configuration that imports the component library. It has two purposes: 1. To have a way of inspecting your components while you develop the library, and 2. As a demo to showcase to people who try to figure out what your library does.\n\nThe reason that the folder doesn\'t have a logical name like `demo` is that GitHub Pages requires it to be called `docs` for some reason...\n\n## Getting started\n\nFollow these steps to get started developing your own react component:\n\n* `git clone https://github.com/yogaboll/react-npm-component-starter.git`\n* `npm install`\n* `npm run dev` to transpile both the lib and docs folder in watch mode and serve the docs page for you.\n* Go to http://127.0.0.1:8000 to see the demo in action. Whenever you change the code in either src/lib or src/docs, the page will automatically update.\n\nRemember to reset the git history:\n\n* `rm -rf .git`\n* `git init`\n* `git add .`\n* `git commit -m "setup project"`\n\nWhen you have completed development and want to publish to npm:\n\n* Change the "name" field in the package.json file (the npm package will get this name), as well "description", "author" and any other fields that need to change.\n* `npm publish`\n* Go to npmjs.com/package/[YOUR COMPONENT NAME]/ to confirm that it has been published.\n\nHost demo on GitHub Pages:\n\n* `npm run docs:prod` - Make a production bundle of the demo app.\n* Commit your changes to git and push to your GitHub repository.\n* On your GitHub repo page, click the **settings** tab and scroll down to the **GitHub Pages** heading. Pick `master branch /docs folder` in the **source** dropdown, And BOOM, your demo page is already live on the internet for free.\n* Note: Sometimes it might take about an hour for the page to actually start hosting. Adding /index.html after the url works instantly for whatever reason.\n\n## What about CSS?\n\n### Inline styles\n\nThe easiest option is to use the style attribute. Like this for example:\n\n`<button style={{background: "blue", width: 20 }} >test</button>`\n\nThis is a clean approach since the user of your package doesn\'t have to separately import a css file. The downside is that you can\'t use a bunch of css features: pseudo-selectors like `:focus` and `:hover`, media-queries and some prefixed css-properties, which can be a deal breaker.\n\n### Separate CSS file\n\nYour other option is to create a css file inside the `src/lib` folder. It will be automatically copied to the generated `lib` folder. Then you have to ask your users to import it into their app with something like `import "../node_modules/[NAME_OF_YOUR_LIBRARY]/lib/styles.css";` or to manually copy it. Your css class names might be global for the developers entire app so make the class names are unique.\n\nKeep in mind that it is a bad idea to import the css directly into your component file. This requires the webpack style-loader to work, so any user of your package that does not use this loader will be screwed.\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: 'ce2a65be33493d7e90576935ffad241c8ee8a31f',
21 silly publish   bugs: { url: 'https://github.com/zmihaf/react-dibs/issues' },
21 silly publish   _id: 'react-dibs@0.5.0',
21 silly publish   _shasum: 'e6ab8f2124224a010adc8ac5fed511ebd2fd6b6c',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name react-dibs
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'react-dibs',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'react-dibs',
26 silly mapToRegistry   name: 'react-dibs',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/react-dibs
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /Users/azmihafizha/.npm/react-dibs/0.5.0/package.tgz
30 verbose request uri https://registry.npmjs.org/react-dibs
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 4:37:35 PM
33 verbose request using bearer token for auth
34 verbose request id 479adfda08c0c303
35 http request PUT https://registry.npmjs.org/react-dibs
36 http 403 https://registry.npmjs.org/react-dibs
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '93',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Tue, 15 May 2018 09:37:36 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-sin18024-SIN',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1526377055.484532,VS0,VE1294',
37 verbose headers   vary: 'Accept-Encoding, Accept' }
38 verbose request invalidating /Users/azmihafizha/.npm/registry.npmjs.org/react-dibs on PUT
39 error publish Failed PUT 403
40 verbose stack Error: You cannot publish over the previously published versions: 0.5.0. : react-dibs
40 verbose stack     at makeError (/Users/azmihafizha/.nvm/versions/node/v7.3.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/Users/azmihafizha/.nvm/versions/node/v7.3.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
40 verbose stack     at Request._callback (/Users/azmihafizha/.nvm/versions/node/v7.3.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
40 verbose stack     at Request.self.callback (/Users/azmihafizha/.nvm/versions/node/v7.3.0/lib/node_modules/npm/node_modules/request/request.js:187:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/Users/azmihafizha/.nvm/versions/node/v7.3.0/lib/node_modules/npm/node_modules/request/request.js:1048:10)
40 verbose stack     at emitOne (events.js:96:13)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/Users/azmihafizha/.nvm/versions/node/v7.3.0/lib/node_modules/npm/node_modules/request/request.js:969:12)
41 verbose statusCode 403
42 verbose pkgid react-dibs
43 verbose cwd /Users/azmihafizha/_tvlk/react-dibs
44 error Darwin 16.7.0
45 error argv "/Users/azmihafizha/.nvm/versions/node/v7.3.0/bin/node" "/Users/azmihafizha/.nvm/versions/node/v7.3.0/bin/npm" "publish"
46 error node v7.3.0
47 error npm  v3.10.10
48 error code E403
49 error You cannot publish over the previously published versions: 0.5.0. : react-dibs
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
